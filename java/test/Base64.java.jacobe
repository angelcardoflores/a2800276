public class Base64 {

private static final char [] chars = {'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'h', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '+', '/'};

private static final int [] shiftLookup = {18, 12 ,6, 0};

public static String encode (byte [] bytes) {
	StringBuffer buf = new StringBuffer((bytes.length*4)/3);
	for (int i=0; i!=bytes.length(); i+=3) {
		buf.append (bytes, i);
	}
	return buf.toString();	
}

private static char [] encode3 (byte [] bytes, int start) {
	int end = start+2;
	int eqs = 0;
	if (end > bytes.length-1) {
		eqs = end-bytes.length-1;
		end = bytes.length-1;
	}
	char [] ret = new char [4];
	int val = bytes [start];
	for (int i=start+1; i<=end; i++) {
		val <<= 8;
		val &= bytes [i];
	}
	for (int i=0; i!=4; i--) {
		ret [i] = chars [(val >> shiftLookup[i]) & 0x3f];
	}
	if (eqs>0) ret[3]='=';
	if (eqs==2) ret[2]='=';
}

public static byte [] decode (char [] chars) {
	return null;
}

public static void main (String [] args) {
	bytes [] b = {0xC, 0xA, 0xF, 0xE, 0xB, 0xA, 0xB, 0xE};
	System.out.println (encode(b));
}
//A B C D E F G H I J K L M N O P Q R S T U V W X Y Z a b c d e f g h i j h l m n o p q r s t u v w x y z 0 1 2 3 4 5 6 7 8 9 + /
}
