= bytes -- routines to help manipulate bytes.


Example


The beginning of an IP Packet could be coded like this:

    require "bytes"
    class IPPacket
      include Bytes
      byte_accessor :ver_ihl , "vvvv ...." => :version
                               ".... vvvv" => :ihl
    
      byte_accessor :tos,      "111. .... | Precedence" => :network_control,
                               "110. ...."              => :inet_control,
                               "101. ...."              => :critic_epc,
                               "100. ...."              => :flash_override,
                               "011. ...."              => :flash,
                               "010. ...."              => :immediate,
                               "001. ...."              => :priority,
                               "000. ...."              => :routine,
                               "...0 .... | Delay"      => :normal_delay,
                               "...1 ...."              => :low_delay,
                               ".... 0... | Throughput" => :normal_throughput,
                               ".... 1..."              => :high_throughput,
                               ".... .0.. | Reliability"=> :low_reliability,
                               ".... .1.."              => :high_reliability,
                               ".... ..1. | RFU"        => :rfu_err_1
                               ".... ...1 | RFU"        => :rfu_err_2
    end
     
     
     
     

RFC 791 describes IP Packets as follows:

    0                   1                   2                   3   
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |Version|  IHL  |Type of Service|          Total Length         |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |         Identification        |Flags|      Fragment Offset    |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |  Time to Live |    Protocol   |         Header Checksum       |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                       Source Address                          |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                    Destination Address                        |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |                    Options                    |    Padding    |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+


The `Type of Service field is described as:


      Bits 0-2:  Precedence.
      Bit    3:  0 = Normal Delay,      1 = Low Delay.
      Bits   4:  0 = Normal Throughput, 1 = High Throughput.
      Bits   5:  0 = Normal Relibility, 1 = High Relibility.
      Bit  6-7:  Reserved for Future Use.

         0     1     2     3     4     5     6     7
      +-----+-----+-----+-----+-----+-----+-----+-----+
      |                 |     |     |     |     |     |
      |   PRECEDENCE    |  D  |  T  |  R  |  0  |  0  |
      |                 |     |     |     |     |     |
      +-----+-----+-----+-----+-----+-----+-----+-----+

        Precedence

          111 - Network Control
          110 - Internetwork Control
          101 - CRITIC/ECP
          100 - Flash Override
          011 - Flash
          010 - Immediate
          001 - Priority
          000 - Routine
                             
